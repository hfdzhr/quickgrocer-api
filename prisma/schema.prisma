// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id         Int       @id @unique @default(autoincrement())
  name       String    @db.VarChar(100)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  products   Product[]

  @@map("categories")
}

model Brand {
  id         Int       @id @unique @default(autoincrement())
  name       String    @db.VarChar(100)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  products   Product[]

  @@map("brands")
}

enum Role {
  MEMBER
  MERCHANT
}

model User {
  id            String    @id @unique @default(uuid())
  email         String    @db.VarChar(100)
  phone_number  String    @db.VarChar(20)
  full_name     String    @db.VarChar(100)
  password      String    @db.VarChar(100)
  role          Role      @default(MEMBER)
  merchant_name String?   @db.VarChar(100)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  products      Product[]
  cart          Cart[]

  @@index([id, email])
  @@map("users")
}

model Product {
  id          String     @id @unique @default(uuid())
  name        String     @db.VarChar(100)
  sku         String     @db.VarChar(50)
  image_url   String     @db.VarChar(50)
  description String     @db.Text
  quantity    Int        @db.Int
  price       Int        @db.Int
  category_id Int
  category    Category   @relation(fields: [category_id], references: [id])
  brand_id    Int
  brand       Brand      @relation(fields: [brand_id], references: [id])
  user_id     String
  user        User       @relation(fields: [user_id], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  cart_item   CartItem[]

  @@index([id, name])
  @@map("products")
}

enum Status {
  Not_Processed
  Processing
  Shipped
  Delivered
  Cancelled
}

model CartItem {
  id             String   @id @unique @default(uuid())
  product_id     String
  product        Product  @relation(fields: [product_id], references: [id])
  quantity       Float    @default(1)
  purchase_price Int
  total_price    Int      @db.Int
  status         Status   @default(Not_Processed)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  cart           Cart[]

  @@index([id])
  @@map("cart_items")
}

model Cart {
  id           Int      @id @unique @default(autoincrement())
  cart_item_id String
  cart_item    CartItem @relation(fields: [cart_item_id], references: [id])
  user_id      String
  user         User     @relation(fields: [user_id], references: [id])
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@index([id])
  @@map("carts")
}
